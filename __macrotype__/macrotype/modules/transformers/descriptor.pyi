from macrotype.modules.symbols import ClassSymbol, FuncSymbol, ModuleInfo
from typing import Any

_ATTR_DECORATORS: dict[type, tuple[str, str]]

def _unwrap_descriptor(obj: Any) -> Any | None: ...
def _descriptor_members(attr_name: str, attr: Any) -> list[FuncSymbol]: ...
def _transform_class(sym: ClassSymbol, cls: type) -> None: ...
def normalize_descriptors(mi: ModuleInfo) -> None: ...
