from dataclasses import _DataclassParams
from macrotype.modules.scanner import ModuleInfo
from macrotype.modules.symbols import ClassSymbol
from typing import Any

_DATACLASS_DEFAULTS: dict[str, Any]

def _dataclass_auto_methods(params: None | _DataclassParams) -> set[str]: ...
def _dataclass_decorator(klass: type) -> None | str: ...
def _transform_class(sym: ClassSymbol, cls: type) -> None: ...
def transform_dataclasses(mi: ModuleInfo) -> None: ...
