# Generated via: macrotype macrotype
# Do not edit by hand
from typing import Any, Iterable

from macrotype.modules.scanner import ModuleInfo
from macrotype.modules.symbols import Symbol

INDENT: str

def emit_module(mi: ModuleInfo) -> list[str]: ...
def collect_all_annotations(mi: ModuleInfo) -> list[Any]: ...
def flatten_annotation_atoms(ann: Any) -> dict[int, Any]: ...
def build_name_map(atoms: Iterable[Any], context: dict[str, Any]) -> dict[int, str]: ...
def stringify_annotation(ann: Any, name_map: dict[int, str]) -> str: ...
def _emit_symbol(sym: Symbol, name_map: dict[int, str], *, indent: int) -> list[str]: ...
