from typing import Any, Generic, TypeVarTuple, TypedDict, Unpack

Ts = TypeVarTuple('Ts')

def as_tuple[Ts](*args: Unpack[Ts]) -> tuple[Unpack[Ts]]: ...

class Variadic(Generic[Unpack[Ts]]):
    def __init__[Ts](self, *args: Unpack[Ts]) -> None: ...
    def to_tuple[Ts](self) -> tuple[Unpack[Ts]]: ...

class Info(TypedDict):
    name: str
    age: int

def with_kwargs(**kwargs: Unpack[Info]) -> Info: ...

def sum_of(*args: tuple[int]) -> int: ...

def dict_echo(**kwargs: dict[str, Any]) -> dict[str, Any]: ...
